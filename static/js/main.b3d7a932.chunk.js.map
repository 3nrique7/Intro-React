{"version":3,"sources":["components/ContextTodo/index.js","components/ContextTodo/useLocalStorage.js","components/TodoCounter/index.js","components/TodoSearch/index.js","components/TodoList/index.js","components/TodoItem/index.js","components/CreateTodoButton/index.js","modal/index.js","components/TodoForm/index.js","components/TodoError/index.js","components/TodoLoading/index.js","components/EmptyTodos/index.js","components/App/AppUI.js","components/App/index.js","index.js"],"names":["TodoContext","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringTodos","useLocalStorage","todos","saveTodos","openModal","setOpenModal","search","setSearch","completedTodos","filter","v","completed","length","totalTodos","searchTodos","text","toLowerCase","includes","Provider","value","addTodo","newTodos","push","completeTodos","index","findIndex","deleteTodos","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prev","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","e","preventDefault","type","TodoError","TodoLoading","EmptyTodos","AppUI","map","App","render"],"mappings":"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","file":"static/js/main.b3d7a932.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\nimport { useLocalStorage } from './useLocalStorage'\r\n\r\nconst TodoContext = createContext()\r\n\r\nfunction TodoProvider(props) {\r\n    // const [todos, saveTodos] = useLocalStorage('TODOS_V1', []) // Uso del hook personalizado\r\n    const { item: todos, saveItem: saveTodos, loading, error } = useLocalStorage('TODOS_V1', [])\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const [search, setSearch] = useState('')\r\n\r\n    const completedTodos = todos.filter(v => v.completed).length\r\n    const totalTodos = todos.length\r\n    // console.log(completedTodos)\r\n\r\n    let searchTodos = []\r\n    if (!search.length >= 1) {\r\n        searchTodos = todos\r\n    } else {\r\n        searchTodos = todos.filter(v => v.text.toLowerCase().includes(search.toLowerCase()))\r\n    }\r\n\r\n    const addTodo = (text) => {\r\n        const newTodos = [...todos]\r\n        newTodos.push({\r\n            completed: false,\r\n            text\r\n        })\r\n        saveTodos(newTodos)\r\n    }\r\n\r\n    const completeTodos = (text) => {\r\n        const index = todos.findIndex(v => v.text === text)\r\n        const newTodos = [...todos]\r\n        newTodos[index].completed = true\r\n        saveTodos(newTodos)\r\n    }\r\n\r\n    const deleteTodos = (text) => {\r\n        const index = todos.findIndex(v => v.text === text)\r\n        const newTodos = [...todos]\r\n        newTodos.splice(index, 1)\r\n        saveTodos(newTodos)\r\n    }\r\n\r\n    // useEffect(() =>{\r\n    //   console.log('Hola a todos')\r\n    // }, [totalTodos])\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            completedTodos,\r\n            totalTodos,\r\n            search,\r\n            setSearch,\r\n            searchTodos,\r\n            addTodo,\r\n            completeTodos,\r\n            deleteTodos,\r\n            openModal,\r\n            setOpenModal\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContext, TodoProvider }","import /*React,*/ { useState, useEffect } from 'react'\r\n\r\n// Hook Personalizado\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = useState(false)\r\n    const [loading, setLoading] = useState(true) //Para mostrar si esta cargando\r\n    const [item, setItem] = useState(initialValue)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            try {\r\n                const localStorageItem = localStorage.getItem(itemName)\r\n                let parsedItem\r\n\r\n                if (!localStorageItem) {\r\n                    localStorage.setItem(itemName, JSON.stringify(initialValue))\r\n                    parsedItem = initialValue\r\n                } else {\r\n                    parsedItem = JSON.parse(localStorageItem)\r\n                }\r\n\r\n                setItem(parsedItem)\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setError(error)\r\n            }\r\n        }, 1000)\r\n    })\r\n\r\n    const saveItem = (newItem) => {\r\n        try {\r\n            const stringTodos = JSON.stringify(newItem)\r\n            localStorage.setItem(itemName, stringTodos)\r\n            setItem(newItem)\r\n        } catch (error) {\r\n            setError(error)\r\n        }\r\n    }\r\n    return { item, saveItem, loading, error }\r\n}\r\n\r\nexport { useLocalStorage }\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../ContextTodo'\r\nimport './TodoCounter.css'\r\n\r\n// const estilos ={\r\n//     color: '#abc',\r\n//     backgroundColor: '#000'\r\n// }\r\n\r\nfunction TodoCounter() {\r\n    const { completedTodos, totalTodos } = useContext(TodoContext)\r\n    return (\r\n        <h2 className='TodoCounter'>Has completado {completedTodos} de {totalTodos} Tareas</h2>\r\n    )\r\n}\r\n\r\nexport { TodoCounter }","import React, { useContext }/*, { useState }*/ from 'react'\r\nimport { TodoContext } from '../ContextTodo'\r\nimport './TodoSearch.css'\r\n\r\nfunction TodoSearch() {\r\n    // const [search, setSearch] = useState('')\r\n    const { search, setSearch } = useContext(TodoContext)\r\n    const onSearchValueChange = (event) => {\r\n        console.log(event.target.value)\r\n        setSearch(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <input\r\n            className=\"TodoSearch\"\r\n            placeholder='Recetas'\r\n            value={search}\r\n            onChange={onSearchValueChange}\r\n        />)\r\n\r\n}\r\n\r\nexport { TodoSearch }","import React from 'react'\r\nimport './TodoList.css'\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <section>\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport { TodoList }","import React from 'react'\r\nimport './TodoItem.css'\r\n\r\nfunction TodoItem(props) {\r\n    // const onClomplete = () => {\r\n    //     alert('ya se completo ' + props.text)\r\n    // }\r\n    // const onDelete = () => {\r\n    //     alert('Se borro ' + props.text)\r\n    // }\r\n\r\n\r\n    return (\r\n        <li className=\"TodoItem\">\r\n            <span\r\n                className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\r\n                onClick={props.onComplete}\r\n            >\r\n                √\r\n            </span>\r\n            <p\r\n                className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}\r\n            >\r\n                {props.text}\r\n            </p>\r\n            <span\r\n                className=\"Icon Icon-delete\"\r\n                onClick={props.onDelete}\r\n            >\r\n                X\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport { TodoItem }","import React from 'react'\r\nimport './CreateTodoButton.css'\r\n\r\nfunction CreateTodoButton({ openModal, setOpenModal }) {\r\n\r\n    const onClickButton = () => {\r\n        setOpenModal(prev => !prev)\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className='CreateTodoButton'\r\n            onClick={onClickButton}\r\n        >\r\n            +\r\n        </button>\r\n    )\r\n}\r\n\r\nexport { CreateTodoButton }","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Modal.css'\r\n\r\nfunction Modal({ children }) {\r\n    return ReactDOM.createPortal(\r\n        <div className = \"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    )\r\n}\r\n\r\nexport { Modal }","import React, { useContext, useState } from 'react'\r\nimport { TodoContext } from '../ContextTodo'\r\nimport './TodoForm.css'\r\n\r\nfunction TodoForm() {\r\n    const [newTodoValue, setNewTodoValue] = useState('')\r\n    const { addTodo, setOpenModal } = useContext(TodoContext)\r\n    const onChange = (e) => {\r\n        setNewTodoValue(e.target.value)\r\n    }\r\n    const onCancel = () => {\r\n        setOpenModal(false)\r\n    }\r\n    const onAdd = (e) => {\r\n        e.preventDefault()\r\n        addTodo(newTodoValue)\r\n        setOpenModal(false)\r\n    }\r\n    return (\r\n        <form onSubmit={onAdd}>\r\n            <label>Escribe tu nueva tarea</label>\r\n            <textarea\r\n                value={newTodoValue}\r\n                onChange={onChange}\r\n                placeholder=\"Explicar que hace la tarea\"\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"TodoForm-button TodoForm-button-cancel\"\r\n                    onClick={onCancel}\r\n                >\r\n                    Cancelar\r\n                </button>\r\n                <button\r\n                    className=\"TodoForm-button TodoForm-button-add\"\r\n                    type=\"submit\"\r\n                >\r\n                    Añadir\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport { TodoForm }\r\n","import React from 'react'\r\n\r\nfunction TodoError({ error }) {\r\n    return (\r\n        <p>Hubo un error - {error}</p>\r\n    )\r\n}\r\n\r\nexport { TodoError }\r\n","import React from 'react'\r\nimport './TodoLoading.css'\r\n\r\nfunction TodoLoading() {\r\n    return (\r\n        <div className=\"LoadingTodo-container\">\r\n            <span className=\"LoadingTodo-completeIcon\"></span>\r\n            <p className=\"LoadingTodo-text\">Cargando .....</p>\r\n            <span className=\"LoadingTodo-deleteIcon\"></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { TodoLoading }\r\n","import React from 'react'\r\n\r\nfunction EmptyTodos() {\r\n    return (\r\n        <p>Crea tu primer tarea!!!</p>\r\n    )\r\n}\r\n\r\nexport { EmptyTodos }\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../ContextTodo'\r\nimport { TodoCounter } from '../TodoCounter'\r\nimport { TodoSearch } from '../TodoSearch'\r\nimport { TodoList } from '../TodoList'\r\nimport { TodoItem } from '../TodoItem'\r\nimport { CreateTodoButton } from '../CreateTodoButton'\r\nimport { Modal } from '../../modal'\r\nimport { TodoForm } from '../TodoForm'\r\nimport { TodoError } from '../TodoError'\r\nimport { TodoLoading } from '../TodoLoading'\r\nimport { EmptyTodos } from '../EmptyTodos'\r\n\r\nfunction AppUI() {\r\n    const { loading, error, searchTodos, completeTodos, deleteTodos, openModal, setOpenModal } = useContext(TodoContext)\r\n\r\n    return (\r\n        <>\r\n            <TodoCounter />\r\n            <TodoSearch />\r\n            <TodoList>\r\n                {error && <TodoError error={error}/>}\r\n                {loading && <TodoLoading />}\r\n                {(!loading && !searchTodos.length) && <EmptyTodos />}\r\n\r\n                {searchTodos.map(v => (\r\n                    <TodoItem\r\n                        key={v.text}\r\n                        text={v.text}\r\n                        completed={v.completed}\r\n                        onComplete={() => { completeTodos(v.text) }}\r\n                        onDelete={() => { deleteTodos(v.text) }}\r\n                    />\r\n                ))}\r\n            </TodoList>\r\n            {/* <TodoContext.Consumer> Si no hacemos uso del useContext para el TodoList\r\n                {\r\n                    () => { // Todos los parametros pertenecen al value(destructuring)\r\n                        return ( //Poner el TodoList here\r\n                        )\r\n                    }\r\n                }\r\n            </TodoContext.Consumer> */}\r\n            {openModal && (\r\n                <Modal>\r\n                    <TodoForm />\r\n                </Modal>\r\n            )}\r\n            <CreateTodoButton\r\n                openModal={openModal}\r\n                setOpenModal={setOpenModal}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { AppUI }\r\n","import React from \"react\";\nimport { AppUI } from \"./AppUI\";\nimport { TodoProvider } from \"../ContextTodo\";\n\n// const defaultTodos = [\n//   { text: 'Cortar tomate', completed: true },\n//   { text: 'Tomar curso reatc', completed: false },\n//   { text: 'Tomar curso html', completed: false },\n//   { text: 'Tomar curso css', completed: false }\n// ]\n\nfunction App() {\n\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}